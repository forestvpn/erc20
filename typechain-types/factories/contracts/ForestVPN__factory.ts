/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { ForestVPN, ForestVPNInterface } from "../../contracts/ForestVPN";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "DOMAIN_SEPARATOR",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "nonces",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "permit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6101406040523480156200001257600080fd5b50604051806040016040528060098152602001682337b932b9ba2b282760b91b81525080604051806040016040528060018152602001603160f81b815250604051806040016040528060098152602001682337b932b9ba2b282760b91b815250604051806040016040528060038152602001621194d560ea1b8152508160039080519060200190620000a692919062000245565b508051620000bc90600490602084019062000245565b5050825160209384012082519284019290922060e08390526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818901819052818301979097526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190960120905292909252610120525062000179905033620001636012600a62000400565b6200017390630bebc20062000418565b6200017f565b62000492565b6001600160a01b038216620001da5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640160405180910390fd5b8060026000828254620001ee91906200043a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b828054620002539062000455565b90600052602060002090601f016020900481019282620002775760008555620002c2565b82601f106200029257805160ff1916838001178555620002c2565b82800160010185558215620002c2579182015b82811115620002c2578251825591602001919060010190620002a5565b50620002d0929150620002d4565b5090565b5b80821115620002d05760008155600101620002d5565b634e487b7160e01b600052601160045260246000fd5b600181815b8085111562000342578160001904821115620003265762000326620002eb565b808516156200033457918102915b93841c939080029062000306565b509250929050565b6000826200035b57506001620003fa565b816200036a57506000620003fa565b81600181146200038357600281146200038e57620003ae565b6001915050620003fa565b60ff841115620003a257620003a2620002eb565b50506001821b620003fa565b5060208310610133831016604e8410600b8410161715620003d3575081810a620003fa565b620003df838362000301565b8060001904821115620003f657620003f6620002eb565b0290505b92915050565b60006200041160ff8416836200034a565b9392505050565b6000816000190483118215151615620004355762000435620002eb565b500290565b60008219821115620004505762000450620002eb565b500190565b600181811c908216806200046a57607f821691505b602082108114156200048c57634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a05160c05160e0516101005161012051611061620004e2600039600061098b015260006109da015260006109b50152600061090e015260006109380152600061096201526110616000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610201578063a9059cbb14610214578063d505accf14610227578063dd62ed3e1461023a57600080fd5b806370a08231146101aa57806379cc6790146101d35780637ecebe00146101e657806395d89b41146101f957600080fd5b8063313ce567116100d3578063313ce5671461016b5780633644e5151461017a578063395093511461018257806342966c681461019557600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d61024d565b60405161011a9190610e02565b60405180910390f35b610136610131366004610e73565b6102df565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610e9d565b6102f7565b6040516012815260200161011a565b61014a61031b565b610136610190366004610e73565b61032a565b6101a86101a3366004610ed9565b61034c565b005b61014a6101b8366004610ef2565b6001600160a01b031660009081526020819052604090205490565b6101a86101e1366004610e73565b610359565b61014a6101f4366004610ef2565b610372565b61010d610392565b61013661020f366004610e73565b6103a1565b610136610222366004610e73565b610421565b6101a8610235366004610f14565b61042f565b61014a610248366004610f87565b610593565b60606003805461025c90610fba565b80601f016020809104026020016040519081016040528092919081815260200182805461028890610fba565b80156102d55780601f106102aa576101008083540402835291602001916102d5565b820191906000526020600020905b8154815290600101906020018083116102b857829003601f168201915b5050505050905090565b6000336102ed8185856105be565b5060019392505050565b6000336103058582856106e3565b61031085858561075d565b506001949350505050565b6000610325610901565b905090565b6000336102ed81858561033d8383610593565b6103479190610fef565b6105be565b6103563382610a28565b50565b6103648233836106e3565b61036e8282610a28565b5050565b6001600160a01b0381166000908152600560205260408120545b92915050565b60606004805461025c90610fba565b600033816103af8286610593565b9050838110156104145760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031082868684036105be565b6000336102ed81858561075d565b8342111561047f5760405162461bcd60e51b815260206004820152601d60248201527f45524332305065726d69743a206578706972656420646561646c696e65000000604482015260640161040b565b60007f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98888886104ae8c610b52565b6040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810186905260e001604051602081830303815290604052805190602001209050600061050982610b7a565b9050600061051982878787610bc8565b9050896001600160a01b0316816001600160a01b03161461057c5760405162461bcd60e51b815260206004820152601e60248201527f45524332305065726d69743a20696e76616c6964207369676e61747572650000604482015260640161040b565b6105878a8a8a6105be565b50505050505050505050565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166106205760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161040b565b6001600160a01b0382166106815760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161040b565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006106ef8484610593565b90506000198114610757578181101561074a5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161040b565b61075784848484036105be565b50505050565b6001600160a01b0383166107c15760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161040b565b6001600160a01b0382166108235760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161040b565b6001600160a01b0383166000908152602081905260409020548181101561089b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161040b565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610757565b6000306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614801561095a57507f000000000000000000000000000000000000000000000000000000000000000046145b1561098457507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6001600160a01b038216610a885760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161040b565b6001600160a01b03821660009081526020819052604090205481811015610afc5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161040b565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016106d6565b6001600160a01b03811660009081526005602052604090208054600181018255905b50919050565b600061038c610b87610901565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b6000806000610bd987878787610bf0565b91509150610be681610cb4565b5095945050505050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610c275750600090506003610cab565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610c7b573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116610ca457600060019250925050610cab565b9150600090505b94509492505050565b6000816004811115610cc857610cc8611015565b1415610cd15750565b6001816004811115610ce557610ce5611015565b1415610d335760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161040b565b6002816004811115610d4757610d47611015565b1415610d955760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161040b565b6003816004811115610da957610da9611015565b14156103565760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161040b565b600060208083528351808285015260005b81811015610e2f57858101830151858201604001528201610e13565b81811115610e41576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610e6e57600080fd5b919050565b60008060408385031215610e8657600080fd5b610e8f83610e57565b946020939093013593505050565b600080600060608486031215610eb257600080fd5b610ebb84610e57565b9250610ec960208501610e57565b9150604084013590509250925092565b600060208284031215610eeb57600080fd5b5035919050565b600060208284031215610f0457600080fd5b610f0d82610e57565b9392505050565b600080600080600080600060e0888a031215610f2f57600080fd5b610f3888610e57565b9650610f4660208901610e57565b95506040880135945060608801359350608088013560ff81168114610f6a57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610f9a57600080fd5b610fa383610e57565b9150610fb160208401610e57565b90509250929050565b600181811c90821680610fce57607f821691505b60208210811415610b7457634e487b7160e01b600052602260045260246000fd5b6000821982111561101057634e487b7160e01b600052601160045260246000fd5b500190565b634e487b7160e01b600052602160045260246000fdfea2646970667358221220b2b92f97b10b4703ddf7177b1a200e0d6a0ffe6f2c0c756cc60208247a92076e64736f6c63430008090033";

type ForestVPNConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ForestVPNConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ForestVPN__factory extends ContractFactory {
  constructor(...args: ForestVPNConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ForestVPN> {
    return super.deploy(overrides || {}) as Promise<ForestVPN>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ForestVPN {
    return super.attach(address) as ForestVPN;
  }
  override connect(signer: Signer): ForestVPN__factory {
    return super.connect(signer) as ForestVPN__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ForestVPNInterface {
    return new utils.Interface(_abi) as ForestVPNInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ForestVPN {
    return new Contract(address, _abi, signerOrProvider) as ForestVPN;
  }
}
